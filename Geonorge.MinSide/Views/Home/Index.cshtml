@inject ApplicationSettings AppSettings
@using Geonorge.MinSide.Services.Authorization;
@model UserSettingsViewModel
@{ ViewData["Title"] = "Min side";
    ViewData["Environment"] = !string.IsNullOrEmpty(AppSettings.EnvironmentName) ? AppSettings.EnvironmentName.ToLower() + "." : "";
}
<div id="app">
    <div class="view-header">
        <div class="container">
            <div class="row">
                <div class="col-sm-9">
                    <h1 class="view-title">{{ ViewTitle }} - {{ getTranslatedOrganizationName() }}</h1>
                </div>
                <div class="col-sm-3">
                    <span class="pull-right">Orgnr. {{ OrganizationNumber }}</span>
                </div>
            </div>
        </div>
    </div>


    <div class="container">
        <div class="section" is="organization-data"></div>
        @if (User.IsInRole(GeonorgeRoles.MetadataAdmin) || User.IsInRole(GeonorgeRoles.MetadataEditor) || User.IsInRole(GeonorgeRoles.ContactPerson))
        {
            <div>
                
                    <form asp-action="Settings">
                        <div class="row">
                            <div class="col-sm-12">
                                <input type="checkbox" asp-for="TodoNotification" id="TodoNotification" /> 
                                <label for="TodoNotification"> Abonner på endringer om oppfølgingspunkter ( @Model.Email )</label>
                            </div>
                        </div>
                         <div class="row">
                            <div class="col-sm-12">
                                <input type="checkbox" asp-for="TodoReminder" id="TodoReminder" />
                                <label for="TodoReminder"> Ønsker også påminnelse</label> 
                                 <input asp-for="TodoReminderTime" type="number" min="0" max="100" id="TodoReminderTime" /> 
                                <label for="TodoReminderTime">dager før frist </label>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-sm-12">
                                <input class="btn no-margin-bottom show-loading-animation" type="submit" value="Start abonnement" />
                            </div>
                        </div>    
                    </form>
                    
                <p></p>
            </div>
        }
        <div class="section data-search-filter-container">
            <input v-model="searchInput" v-bind:placeholder="getSearchInputPlaceholder()" class="data-search-filter" />
            <img src="/dist/images/search_icon-01.svg" alt="search">
        </div>
        <div class="section" is="dokdata" v-bind:load-all-api-data="loadAllApiData"></div>
        <div class="section" is="inspiredata" v-bind:load-all-api-data="loadAllApiData"></div>
        <div class="section" is="metadata" v-bind:load-all-api-data="loadAllApiData"></div>

        <div class="section" is="product-fact-sheets" v-bind:load-all-api-data="loadAllApiData"></div>
        <div class="section" is="cartography" v-bind:load-all-api-data="loadAllApiData"></div>
         <div class="section" is="sld" v-bind:load-all-api-data="loadAllApiData"></div>
        
        <div class="section" is="report-measurment" v-bind:load-all-api-data="loadAllApiData"></div>
        <div class="section" is="code-lists-sosi" v-bind:load-all-api-data="loadAllApiData"></div>
        <div class="section" is="cartography-specifications" v-bind:load-all-api-data="loadAllApiData"></div>
        <div class="section" is="service-notifications" v-bind:load-all-api-data="loadAllApiData"></div>
        <div class="section" is="product-specifications" v-bind:load-all-api-data="loadAllApiData"></div>
       
        

    </div>
</div>

@section scripts {
    @await Html.PartialAsync("~/Views/Shared/VueComponents/_OrganizationData.cshtml")
    @await Html.PartialAsync("~/Views/Shared/VueComponents/_Metadata.cshtml")
    @await Html.PartialAsync("~/Views/Shared/VueComponents/_Sld.cshtml")
    @await Html.PartialAsync("~/Views/Shared/VueComponents/_ProductFactSheets.cshtml")
    @await Html.PartialAsync("~/Views/Shared/VueComponents/_Cartography.cshtml")
    @await Html.PartialAsync("~/Views/Shared/VueComponents/_ProductSpecifications.cshtml")
    @await Html.PartialAsync("~/Views/Shared/VueComponents/_ReportMeasurment.cshtml")
    @await Html.PartialAsync("~/Views/Shared/VueComponents/_CodeListsSosi.cshtml")
    @await Html.PartialAsync("~/Views/Shared/VueComponents/_CartographySpecifications.cshtml")
    @await Html.PartialAsync("~/Views/Shared/VueComponents/_ServiceNotifications.cshtml")
    @await Html.PartialAsync("~/Views/Shared/VueComponents/_Dokdata.cshtml")
    @await Html.PartialAsync("~/Views/Shared/VueComponents/_Inspiredata.cshtml")

    <script>
        var app = new Vue({
            el: '#app',
            components: {
                OrganizationData: OrganizationData,
                Metadata: Metadata,
                Sld: Sld,
                ProductFactSheets: ProductFactSheets,
                Cartography: Cartography,
                ProductSpecifications: ProductSpecifications,
                ReportMeasurment: ReportMeasurment,
                CodeListsSosi: CodeListsSosi,
                CartographySpecifications: CartographySpecifications,
                ServiceNotifications: ServiceNotifications,
                Dokdata: Dokdata,
                Inspiredata: Inspiredata
            },
            data: function() {
                return {
                    OrganizationNumber: '@ViewData["OrganizationOrgnr"]',
                    OrganizationName: '@Html.Raw(ViewData["OrganizationName"])',
                    translatedOrganizationName: null,
                    Environment: '@ViewData["Environment"]',
                    ViewTitle: '@ViewData["title"]',
                    activeLanguage: this.getActiveLanguage(),
                    searchInput: '',
                    searchInputPlaceholder: {
                        en: 'Search your data',
                        no: 'Søk i dine data her'
                    },
                    loadAllApiData: false
                }
            },
            methods: {
                getApiData: function (url) {
                    return axios.get(url, { headers: { 'Accept-Language': this.activeLanguage } })
                        .then(response => { return response.data; })
                        .catch(error => { throw error; });
                },
                getActiveLanguage: function () {
                    return Cookies.get('_culture') ? Cookies.get('_culture') : 'no';

                },
                getSearchInputPlaceholder: function () {
                    return this.searchInputPlaceholder[this.activeLanguage];
                },
                getTranslatedOrganizationName: function () {
                    return this.translatedOrganizationName ? this.translatedOrganizationName : this.OrganizationName;
                }
            },
            watch: {
                searchInput: function (value) {
                    if (value) {
                        this.loadAllApiData = true;
                    }
                }
            }
        })
    </script>
}
